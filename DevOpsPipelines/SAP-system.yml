# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

parameters:

- name: sap_sid
  displayName: SAP SID
  type: string
  default: X00

- name: baseosconfig
  displayName: Base OS Config
  type: boolean
  default: true

- name: saposconfig
  displayName: SAP specific OS Config
  type: boolean
  default: false

- name: bomprocessing
  displayName: BOM Processing
  type: boolean
  default: false

- name: hanadbinstall
  displayName: HANA DB Install 
  type: boolean
  default: false

- name: scsinstall
  displayName: SCS Install
  type: boolean
  default: false

- name: dbload
  displayName: DB Load
  type: boolean
  default: false

- name: pasinstall
  displayName: PAS Install
  type: boolean
  default: false

- name: appinstall
  displayName: APP Install
  type: boolean
  default: false

- name: webdispinstall
  displayName: WebDisp Install
  type: boolean
  default: false

- name: hsrsetup
  displayName: HSR Setup
  type: boolean
  default: false

- name: pacemakersetup
  displayName: Pacemaker Setup
  type: boolean
  default: false

- name: pacemakerscssetup
  displayName: Pacemaker SCS Setup
  type: boolean
  default: false

- name: pacemakerhanasetup
  displayName: Pacemaker HANA Setup
  type: boolean
  default: false

trigger:
  none

pool:
  name: $(agent)

# variables:

stages:
- stage: Preparation
  jobs:
  - job: Preparation
    steps:
    - checkout: none
    - script: |
        #!/bin/bash
        if [ -e base ]; then
          echo "link to base exists"
        else 
            echo "creating link to base"
            sudo ln -s $(DEPLOYMENT_BASE) base
        fi
      displayName: Link to DEPLOYMENT_BASE
      failOnStderr: true

- stage: Base_OS_Config
  condition: eq(${{ parameters.baseosconfig }}, true)
  jobs:
  - job: Base_OS_Config
    steps:
    - checkout: none
    - task: Ansible@0
      displayName: Base_OS_Config
      inputs:
        ansibleInterface: 'agentMachine'
        playbookPathOnAgentMachine: 'base/sap-hana/deploy/ansible/playbook_01_os_base_config.yaml'
        inventoriesAgentMachine: 'file'
        inventoryFileOnAgentMachine: 'base/WORKSPACES/SYSTEM/DEV-WEEU-SAP01-X00/X00_hosts.yaml'
        args: '-vv --private-key base/WORKSPACES/SYSTEM/DEV-WEEU-SAP01-X00/sshkey --extra-vars="@base/WORKSPACES/SYSTEM/DEV-WEEU-SAP01-X00/sap-parameters.yaml" --extra-vars="_workspace_directory=base/WORKSPACES/SYSTEM/DEV-WEEU-SAP01-X00/'

- stage: SAP_OS_Config
  condition: eq(${{ parameters.saposconfig }}, true)
  jobs:
  - job: SAP_OS_Config
    steps:
    - checkout: none
    - task: Ansible@0
      displayName: SAP_OS_Config
      inputs:
        ansibleInterface: 'agentMachine'
        playbookPathOnAgentMachine: 'base/sap-hana/deploy/ansible/playbook_02_os_sap_specific_config.yaml'
        inventoriesAgentMachine: 'file'
        inventoryFileOnAgentMachine: 'base/WORKSPACES/SYSTEM/DEV-WEEU-SAP01-X00/X00_hosts.yaml'
        args: '-vv --private-key base/WORKSPACES/SYSTEM/DEV-WEEU-SAP01-X00/sshkey --extra-vars="@base/WORKSPACES/SYSTEM/DEV-WEEU-SAP01-X00/sap-parameters.yaml" --extra-vars="_workspace_directory=base/WORKSPACES/SYSTEM/DEV-WEEU-SAP01-X00/"'
